
Figure A4: Global average annual frequency of each AM (1979 â€“ 2023). 

%% mapping global annual average frequency

% Assume `data` is your 16436x1038240 matrix
data = gwtcx2;
num_years = 2023 - 1979 + 1; % Calculate number of years
days_per_year = 365; % Standardizing for a non-leap year setup

% Step 1: Reshape the data into (days_per_year x num_years x global_grids)
reshaped_data = reshape(data(1:days_per_year*num_years, :), days_per_year, num_years, []);

% Step 2: Define the 11 categories
categories = [11, 12, 13, 21, 22, 23, 31, 32, 33, 72, 73];
num_categories = length(categories);

% Initialize storage for category frequencies
category_frequencies = zeros(num_years, num_categories);

% Step 3: Count occurrences for each category across all grids
for i = 1:num_categories
    category = categories(i);
    % Logical array where data matches the category
    category_count = sum(reshaped_data == category, [1, 3]); % Sum across days and grids
    category_frequencies(:, i) = category_count;
end

% Step 4: Normalize by total days and grids to get percentages
total_days = days_per_year * total_grids; % Total possible occurrences
category_annual_percentage = (category_frequencies / total_days) * 100;

% Step 5: Calculate the global average percentage across years
global_average_percentage2 = mean(category_annual_percentage, 1);

% Display the results
% disp('Global average annual frequency (in %) for each category:');
% disp(table(categories', global_average_percentage', 'VariableNames', {'Category', 'GlobalAvgPercentage'}));
